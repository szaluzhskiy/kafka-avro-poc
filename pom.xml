<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.epam.edp</groupId>
  <artifactId>kafka-avro-poc</artifactId>
  <version>0.0.0.1</version>
  <modules>
    <module>avro-api</module>
    <module>producer</module>
    <module>consumer</module>
  </modules>
  <packaging>pom</packaging>

  <name>kafka-avro-poc</name>

  <properties>
    <java.version>1.8</java.version>
    <avro.version>1.9.1</avro.version>
    <gson.version>2.2.4</gson.version>
    <spring.boot.maven.plugin.version>2.1.1.RELEASE</spring.boot.maven.plugin.version>
    <!-- Maven properties for compilation -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <confluent.version>5.3.0</confluent.version>
    <kafka.version>2.3.1</kafka.version>
    <checkstyle.suppressions.location>checkstyle/suppressions.xml</checkstyle.suppressions.location>
    <confluent.maven.repo>http://packages.confluent.io/maven/</confluent.maven.repo>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <repositories>
    <repository>
      <id>confluent</id>
      <name>Confluent</name>
      <url>${confluent.maven.repo}</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>confluent</id>
      <url>https://packages.confluent.io/maven/</url>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>io.confluent</groupId>
          <artifactId>kafka-schema-registry-maven-plugin</artifactId>
          <version>${confluent.version}</version>
          <configuration>
            <schemaRegistryUrls>
              <param>http://localhost:8081</param>
            </schemaRegistryUrls>
            <subjects>
              <transactions-value>src/main/resources/avro/Payment.avsc</transactions-value>
            </subjects>
            <outputDirectory>src/main/resources/avro/schema</outputDirectory>
          </configuration>
          <goals>
            <goal>test-compatibility</goal>
          </goals>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-checkstyle-plugin</artifactId>-->
<!--        <executions>-->
<!--          &lt;!&ndash;-->
<!--           This declaration merges with the one in the parent, rather-->
<!--           than overriding it, so we need to disable the "validate" phase-->
<!--           execution that the parent declares and declare our own-->
<!--           during "test-compile".-->
<!--           One reason for this is that avro codegen runs during compile,-->
<!--           and while it's not strictly a precondition, it's-->
<!--           confusing to address style violations while the IDE is telling you-->
<!--           that some generated class doesn't exist. Test-compile is the first phase-->
<!--           that's guaranteed to run after compile and before any unit or integration-->
<!--           tests.-->
<!--           Also, we want to disable the parent's configuration because it declares stuff-->
<!--           we don't care about, like suppressions. (Honestly, it shouldn't)-->
<!--           &ndash;&gt;-->
<!--          <execution>-->
<!--            <id>validate</id>-->
<!--            <phase>none</phase>-->
<!--            <configuration>-->
<!--              <skip>true</skip>-->
<!--            </configuration>-->
<!--          </execution>-->
<!--          <execution>-->
<!--            <id>test-compile</id>-->
<!--            <phase>test-compile</phase>-->
<!--            <configuration>-->
<!--              <encoding>UTF-8</encoding>-->
<!--              <consoleOutput>true</consoleOutput>-->
<!--              <failsOnError>true</failsOnError>-->
<!--              <failOnViolation>true</failOnViolation>-->
<!--              <includeResources>false</includeResources>-->
<!--              <includeTestResources>false</includeTestResources>-->
<!--              <includeTestSourceDirectory>true</includeTestSourceDirectory>-->
<!--              <excludes>io/confluent/examples/streams/avro/**</excludes>-->
<!--              <configLocation>checkstyle.xml</configLocation>-->
<!--            </configuration>-->
<!--            <goals>-->
<!--              <goal>check</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--        </executions>-->
<!--      </plugin>-->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring.boot.maven.plugin.version}</version>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.10</version>
      <scope>provided</scope>
    </dependency>

    <!-- Add the Kafka dependencies -->
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-avro-serializer</artifactId>
      <version>${confluent.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>${kafka.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>${avro.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${gson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.30</version>
    </dependency>
  </dependencies>

</project>
